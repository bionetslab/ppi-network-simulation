go_prey <- read.csv(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_prey_',n,'_padjust',p,'.csv'))
go_prey$Cluster <- rep('prey \n hubs',nrow(go_prey))
}
if(file.exists(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_normalized_hubs_',n,'_padjust',p,'.csv'))){
go_normal <- read.csv(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_normalized_hubs_',n,'_padjust',p,'.csv'))
go_normal$Cluster <- rep('normalized \n hubs',nrow(go_normal))
}
if(file.exists(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_Y2H_hus_',n,'_padjust',p,'.csv'))){
go_y2h <- read.csv(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_Y2H_hus_',n,'_padjust',p,'.csv'))
go_y2h$Cluster <- rep('Y2H \n hubs',nrow(go_y2h))
}
if(file.exists(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_Aggregated_network_',n,'_padjust',p,'.csv'))){
go_agg <- read.csv(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_Aggregated_network_',n,'_padjust',p,'.csv'))
go_agg$Cluster <- rep('Uncorrected aggregated \n network hubs',nrow(go_agg))
}
if(exists('go_y2h') & exists('go_normal')){
t <- rbind(go_prey,go_normal,go_y2h,go_agg)
}else{
if(!exists('go_y2h') & exists('go_normal')){
t <- rbind(go_prey,go_normal,go_agg)
}else{
if(!exists('go_y2h') & !exists('go_normal')){
t <- rbind(go_prey,go_agg)
}else{
if(exists('go_y2h') & !exists('go_normal')){
t <- rbind(go_prey,go_y2h,go_agg)
}
}
}
}
t$Cluster <- factor(t$Cluster, levels = c('Uncorrected aggregated \n network hubs','prey \n hubs','normalized \n hubs','Y2H \n hubs'))
res <- new("compareClusterResult", compareClusterResult = t, .call = match.call(expand.dots = TRUE))
# to generate figure for paper
if(d == 'enrichGO_results'){
t1 <- rbind(t,c(t$ID[1],t$Description[1],'5/41',t$BgRatio[1],t$pvalue[1],t$p.adjust[1],t$qvalue[1],t$geneID[1],5,'Y2H hubs'))
}
if(d == 'enrichDO_results'){
t1 <- rbind(t,c(t$ID[1],t$Description[1],'2/18',t$BgRatio[1],t$pvalue[1],t$p.adjust[1],t$qvalue[1],t$geneID[1],2,'Y2H hubs'),
c(t$ID[1],t$Description[1],'3/23',t$BgRatio[1],t$pvalue[1],t$p.adjust[1],t$qvalue[1],t$geneID[1],3,'normalized hubs'))
}
######## plot #############
source('../../../../../functions.R')
n <- 50
p <- 0.05
d <- 'enrichGO_results'
#d <- 'enrichDO_results'
#d <- 'enrichPathway_results'
#d <- 'enrichKEGG_results'
if(file.exists(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_prey_',n,'_padjust',p,'.csv'))){
go_prey <- read.csv(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_prey_',n,'_padjust',p,'.csv'))
go_prey$Cluster <- rep('prey \n hubs',nrow(go_prey))
}
if(file.exists(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_normalized_hubs_',n,'_padjust',p,'.csv'))){
go_normal <- read.csv(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_normalized_hubs_',n,'_padjust',p,'.csv'))
go_normal$Cluster <- rep('normalized \n hubs',nrow(go_normal))
}
if(file.exists(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_Y2H_hus_',n,'_padjust',p,'.csv'))){
go_y2h <- read.csv(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_Y2H_hus_',n,'_padjust',p,'.csv'))
go_y2h$Cluster <- rep('Y2H \n hubs',nrow(go_y2h))
}
if(file.exists(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_Aggregated_network_',n,'_padjust',p,'.csv'))){
go_agg <- read.csv(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_Aggregated_network_',n,'_padjust',p,'.csv'))
go_agg$Cluster <- rep('Uncorrected aggregated \n network hubs',nrow(go_agg))
}
if(exists('go_y2h') & exists('go_normal')){
t <- rbind(go_prey,go_normal,go_y2h,go_agg)
}else{
if(!exists('go_y2h') & exists('go_normal')){
t <- rbind(go_prey,go_normal,go_agg)
}else{
if(!exists('go_y2h') & !exists('go_normal')){
t <- rbind(go_prey,go_agg)
}else{
if(exists('go_y2h') & !exists('go_normal')){
t <- rbind(go_prey,go_y2h,go_agg)
}
}
}
}
t$Cluster <- factor(t$Cluster, levels = c('Uncorrected aggregated \n network hubs','prey \n hubs','normalized \n hubs','Y2H \n hubs'))
res <- new("compareClusterResult", compareClusterResult = t, .call = match.call(expand.dots = TRUE))
# to generate figure for paper
if(d == 'enrichGO_results'){
t1 <- rbind(t,c(t$ID[1],t$Description[1],'5/41',t$BgRatio[1],t$pvalue[1],t$p.adjust[1],t$qvalue[1],t$geneID[1],5,'Y2H \n hubs'))
}
if(d == 'enrichDO_results'){
t1 <- rbind(t,c(t$ID[1],t$Description[1],'2/18',t$BgRatio[1],t$pvalue[1],t$p.adjust[1],t$qvalue[1],t$geneID[1],2,'Y2H \n hubs'),
c(t$ID[1],t$Description[1],'3/23',t$BgRatio[1],t$pvalue[1],t$p.adjust[1],t$qvalue[1],t$geneID[1],3,'normalized \n hubs'))
}
if(d == 'enrichKEGG_results'){
t1 <- rbind(t,c(t$ID[1],t$Description[1],'1/13',t$BgRatio[1],t$pvalue[1],t$p.adjust[1],t$qvalue[1],t$geneID[1],1,'Y2H \n hubs'))
}
t1$Cluster <- factor(t1$Cluster, levels = c('Uncorrected aggregated \n network hubs','prey \n hubs','normalized \n hubs','Y2H \n hubs'))
t1$pvalue <- as.numeric(t1$pvalue)
t1$p.adjust <- as.numeric(t1$p.adjust)
t1$qvalue <- as.numeric(t1$qvalue)
res <- new("compareClusterResult", compareClusterResult = t1, .call = match.call(expand.dots = TRUE))
dotplot(res, font.size = 6, label_format = 20)
ggsave(filename = paste0(d,'/dotplot_',unlist(strsplit(d, split = '_'))[1],'_n',n,'_padjust',p,'_paper.pdf'),height = 15, width = 10,units = 'cm')
######## plot #############
source('../../../../../functions.R')
n <- 50
p <- 0.05
#d <- 'enrichGO_results'
d <- 'enrichDO_results'
#d <- 'enrichPathway_results'
#d <- 'enrichKEGG_results'
if(file.exists(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_prey_',n,'_padjust',p,'.csv'))){
go_prey <- read.csv(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_prey_',n,'_padjust',p,'.csv'))
go_prey$Cluster <- rep('prey \n hubs',nrow(go_prey))
}
if(file.exists(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_normalized_hubs_',n,'_padjust',p,'.csv'))){
go_normal <- read.csv(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_normalized_hubs_',n,'_padjust',p,'.csv'))
go_normal$Cluster <- rep('normalized \n hubs',nrow(go_normal))
}
if(file.exists(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_Y2H_hus_',n,'_padjust',p,'.csv'))){
go_y2h <- read.csv(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_Y2H_hus_',n,'_padjust',p,'.csv'))
go_y2h$Cluster <- rep('Y2H \n hubs',nrow(go_y2h))
}
if(file.exists(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_Aggregated_network_',n,'_padjust',p,'.csv'))){
go_agg <- read.csv(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_Aggregated_network_',n,'_padjust',p,'.csv'))
go_agg$Cluster <- rep('Uncorrected aggregated \n network hubs',nrow(go_agg))
}
if(exists('go_y2h') & exists('go_normal')){
t <- rbind(go_prey,go_normal,go_y2h,go_agg)
}else{
if(!exists('go_y2h') & exists('go_normal')){
t <- rbind(go_prey,go_normal,go_agg)
}else{
if(!exists('go_y2h') & !exists('go_normal')){
t <- rbind(go_prey,go_agg)
}else{
if(exists('go_y2h') & !exists('go_normal')){
t <- rbind(go_prey,go_y2h,go_agg)
}
}
}
}
t$Cluster <- factor(t$Cluster, levels = c('Uncorrected aggregated \n network hubs','prey \n hubs','normalized \n hubs','Y2H \n hubs'))
res <- new("compareClusterResult", compareClusterResult = t, .call = match.call(expand.dots = TRUE))
# to generate figure for paper
if(d == 'enrichGO_results'){
t1 <- rbind(t,c(t$ID[1],t$Description[1],'5/41',t$BgRatio[1],t$pvalue[1],t$p.adjust[1],t$qvalue[1],t$geneID[1],5,'Y2H \n hubs'))
}
if(d == 'enrichDO_results'){
t1 <- rbind(t,c(t$ID[1],t$Description[1],'2/18',t$BgRatio[1],t$pvalue[1],t$p.adjust[1],t$qvalue[1],t$geneID[1],2,'Y2H \n hubs'),
c(t$ID[1],t$Description[1],'3/23',t$BgRatio[1],t$pvalue[1],t$p.adjust[1],t$qvalue[1],t$geneID[1],3,'normalized \n hubs'))
}
if(d == 'enrichKEGG_results'){
t1 <- rbind(t,c(t$ID[1],t$Description[1],'1/13',t$BgRatio[1],t$pvalue[1],t$p.adjust[1],t$qvalue[1],t$geneID[1],1,'Y2H \n hubs'))
}
t1$Cluster <- factor(t1$Cluster, levels = c('Uncorrected aggregated \n network hubs','prey \n hubs','normalized \n hubs','Y2H \n hubs'))
t1$pvalue <- as.numeric(t1$pvalue)
t1$p.adjust <- as.numeric(t1$p.adjust)
t1$qvalue <- as.numeric(t1$qvalue)
res <- new("compareClusterResult", compareClusterResult = t1, .call = match.call(expand.dots = TRUE))
dotplot(res, font.size = 6, label_format = 20)
ggsave(filename = paste0(d,'/dotplot_',unlist(strsplit(d, split = '_'))[1],'_n',n,'_padjust',p,'_paper.pdf'),height = 15, width = 10,units = 'cm')
######## plot #############
source('../../../../../functions.R')
n <- 50
p <- 0.05
#d <- 'enrichGO_results'
#d <- 'enrichDO_results'
#d <- 'enrichPathway_results'
d <- 'enrichKEGG_results'
if(file.exists(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_prey_',n,'_padjust',p,'.csv'))){
go_prey <- read.csv(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_prey_',n,'_padjust',p,'.csv'))
go_prey$Cluster <- rep('prey \n hubs',nrow(go_prey))
}
if(file.exists(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_normalized_hubs_',n,'_padjust',p,'.csv'))){
go_normal <- read.csv(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_normalized_hubs_',n,'_padjust',p,'.csv'))
go_normal$Cluster <- rep('normalized \n hubs',nrow(go_normal))
}
if(file.exists(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_Y2H_hus_',n,'_padjust',p,'.csv'))){
go_y2h <- read.csv(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_Y2H_hus_',n,'_padjust',p,'.csv'))
go_y2h$Cluster <- rep('Y2H \n hubs',nrow(go_y2h))
}
if(file.exists(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_Aggregated_network_',n,'_padjust',p,'.csv'))){
go_agg <- read.csv(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_Aggregated_network_',n,'_padjust',p,'.csv'))
go_agg$Cluster <- rep('Uncorrected aggregated \n network hubs',nrow(go_agg))
}
if(exists('go_y2h') & exists('go_normal')){
t <- rbind(go_prey,go_normal,go_y2h,go_agg)
}else{
if(!exists('go_y2h') & exists('go_normal')){
t <- rbind(go_prey,go_normal,go_agg)
}else{
if(!exists('go_y2h') & !exists('go_normal')){
t <- rbind(go_prey,go_agg)
}else{
if(exists('go_y2h') & !exists('go_normal')){
t <- rbind(go_prey,go_y2h,go_agg)
}
}
}
}
t$Cluster <- factor(t$Cluster, levels = c('Uncorrected aggregated \n network hubs','prey \n hubs','normalized \n hubs','Y2H \n hubs'))
res <- new("compareClusterResult", compareClusterResult = t, .call = match.call(expand.dots = TRUE))
# to generate figure for paper
if(d == 'enrichGO_results'){
t1 <- rbind(t,c(t$ID[1],t$Description[1],'5/41',t$BgRatio[1],t$pvalue[1],t$p.adjust[1],t$qvalue[1],t$geneID[1],5,'Y2H \n hubs'))
}
if(d == 'enrichDO_results'){
t1 <- rbind(t,c(t$ID[1],t$Description[1],'2/18',t$BgRatio[1],t$pvalue[1],t$p.adjust[1],t$qvalue[1],t$geneID[1],2,'Y2H \n hubs'),
c(t$ID[1],t$Description[1],'3/23',t$BgRatio[1],t$pvalue[1],t$p.adjust[1],t$qvalue[1],t$geneID[1],3,'normalized \n hubs'))
}
if(d == 'enrichKEGG_results'){
t1 <- rbind(t,c(t$ID[1],t$Description[1],'1/13',t$BgRatio[1],t$pvalue[1],t$p.adjust[1],t$qvalue[1],t$geneID[1],1,'Y2H \n hubs'))
}
t1$Cluster <- factor(t1$Cluster, levels = c('Uncorrected aggregated \n network hubs','prey \n hubs','normalized \n hubs','Y2H \n hubs'))
t1$pvalue <- as.numeric(t1$pvalue)
t1$p.adjust <- as.numeric(t1$p.adjust)
t1$qvalue <- as.numeric(t1$qvalue)
res <- new("compareClusterResult", compareClusterResult = t1, .call = match.call(expand.dots = TRUE))
dotplot(res, font.size = 6, label_format = 20)
ggsave(filename = paste0(d,'/dotplot_',unlist(strsplit(d, split = '_'))[1],'_n',n,'_padjust',p,'_paper.pdf'),height = 15, width = 10,units = 'cm')
######## plot #############
source('../../../../../functions.R')
n <- 50
p <- 0.05
#d <- 'enrichGO_results'
#d <- 'enrichDO_results'
d <- 'enrichPathway_results'
#d <- 'enrichKEGG_results'
if(file.exists(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_prey_',n,'_padjust',p,'.csv'))){
go_prey <- read.csv(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_prey_',n,'_padjust',p,'.csv'))
go_prey$Cluster <- rep('prey \n hubs',nrow(go_prey))
}
if(file.exists(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_normalized_hubs_',n,'_padjust',p,'.csv'))){
go_normal <- read.csv(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_normalized_hubs_',n,'_padjust',p,'.csv'))
go_normal$Cluster <- rep('normalized \n hubs',nrow(go_normal))
}
if(file.exists(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_Y2H_hus_',n,'_padjust',p,'.csv'))){
go_y2h <- read.csv(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_Y2H_hus_',n,'_padjust',p,'.csv'))
go_y2h$Cluster <- rep('Y2H \n hubs',nrow(go_y2h))
}
if(file.exists(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_Aggregated_network_',n,'_padjust',p,'.csv'))){
go_agg <- read.csv(paste0(d,'/table_',unlist(strsplit(d, split = '_'))[1],'_Aggregated_network_',n,'_padjust',p,'.csv'))
go_agg$Cluster <- rep('Uncorrected aggregated \n network hubs',nrow(go_agg))
}
if(exists('go_y2h') & exists('go_normal')){
t <- rbind(go_prey,go_normal,go_y2h,go_agg)
}else{
if(!exists('go_y2h') & exists('go_normal')){
t <- rbind(go_prey,go_normal,go_agg)
}else{
if(!exists('go_y2h') & !exists('go_normal')){
t <- rbind(go_prey,go_agg)
}else{
if(exists('go_y2h') & !exists('go_normal')){
t <- rbind(go_prey,go_y2h,go_agg)
}
}
}
}
t$Cluster <- factor(t$Cluster, levels = c('Uncorrected aggregated \n network hubs','prey \n hubs','normalized \n hubs','Y2H \n hubs'))
res <- new("compareClusterResult", compareClusterResult = t, .call = match.call(expand.dots = TRUE))
dotplot(res,  font.size = 6, label_format = 20)
ggsave(filename = paste0(d,'/dotplot_',unlist(strsplit(d, split = '_'))[1],'_n',n,'_padjust',p,'.pdf'),height = 15, width = 10,units = 'cm')
seq(0,0.4,0.05)
length(seq(0,0.4,0.05))
9*9
81*4
64*4
40.5 * 324
13122*2
13122*3
reticulate::repl_python()
setwd("~/marta/marta_WorkStation/ppi-network-simulation")
reticulate::repl_python()
setwd("~/marta/marta_WorkStation/bait_usage/HIPPIE_degree/HIPPIE_union_Intact2022/IDmapping_test")
#--------------------------------------
# plot degree distribution with ggplot
#--------------------------------------
degree_hippie_intact <- read.csv('degree_HIPPIEunionIntact2022_afterReviewed_mapping.csv')
m_pl = displ$new(degree_hippie_intact$degree)
est = estimate_xmin(m_pl)
m_pl$setXmin(est)
#plot
xy <- plot(m_pl)
l <- lines(m_pl, col = 'green')
scaleFUN <- function(x) signif(x,digits = 3)
ggplot(xy, aes(x = x, y = y)) + geom_point() + geom_line(data = l, color = "red") +
scale_x_continuous(trans='log2') + scale_y_continuous(trans='log2', labels = scaleFUN) + xlab('Degree') + ylab('Frequency') +
theme(axis.text = element_text(size = 16), axis.title = element_text(size = 16))
ggsave(paste0('plot_degree_hippieIntact2022_afterReviewed_mapping','.pdf',height = 10, width = 10,units = 'cm'))
ggsave(paste0('plot_degree_hippieIntact2022_afterReviewed_mapping','.pdf'),height = 10, width = 10,units = 'cm')
ggsave(paste0('plot_degree_hippieIntact2022_afterReviewed_mapping','.pdf'),height = 8, width = 8,units = 'cm')
ggplot(xy, aes(x = x, y = y)) + geom_point() + geom_line(data = l, color = "red") +
scale_x_continuous(trans='log2') + scale_y_continuous(trans='log2', labels = scaleFUN) + xlab('Degree') + ylab('Frequency') +
theme(axis.text = element_text(size = 12), axis.title = element_text(size = 12))
ggsave(paste0('plot_degree_hippieIntact2022_afterReviewed_mapping','.pdf'),height = 8, width = 10,units = 'cm')
table_ratio <- read.csv('table_ratio_HIPPIEunionIntact2022.csv')
View(xy)
table_ratio <- read.csv('table_ratio_HIPPIEunionIntact2022.csv')
View(table_ratio)
table_ratio$num_inter <- as.numeric(gsub('>=','',table_ratio$num_inter))
table_ratio <- table_ratio[-c(3,4),]
ggplot(data=table_ratio, aes(x=num_inter, y=ratio)) +
geom_point() + xlab("Number of ppis") + ylab('non-powerLaw/power-law') +
scale_x_continuous(labels = table_ratio$num_inter,breaks = table_ratio$num_inter) +
theme(axis.text = element_text(size = 16), axis.title = element_text(size = 16))
ggplot(data=table_ratio, aes(x=num_inter, y=ratio)) +
geom_point() + xlab("Number of ppis") + ylab('non-powerLaw/power-law') +
scale_x_continuous(labels = table_ratio$num_inter,breaks = table_ratio$num_inter) +
theme(axis.text = element_text(size = 12), axis.title = element_text(size = 12))
ggsave(paste0('plot_numInter_ratio_HIPPIEunionIntact2022_v2.pdf'),height = 8, width = 10,units = 'cm')
ggplot(data=table_ratio, aes(x=num_inter, y=ratio)) +
geom_point() + xlab("Number of ppis") + ylab('non-power law/power-law') +
scale_x_continuous(labels = table_ratio$num_inter,breaks = table_ratio$num_inter) +
theme(axis.text = element_text(size = 12), axis.title = element_text(size = 12))
ggsave(paste0('plot_numInter_ratio_HIPPIEunionIntact2022_v2.pdf'),height = 8, width = 10,units = 'cm')
ggsave(paste0('plot_numInter_ratio_HIPPIEunionIntact2022_v2.pdf'),height = 8, width = 12,units = 'cm')
ggsave(paste0('plot_numInter_ratio_HIPPIEunionIntact2022_v2.pdf'),height = 8, width = 13,units = 'cm')
#--------------------------------------
# plot degree distribution with ggplot
#--------------------------------------
degree_hippie_intact <- read.csv('degree_HIPPIEunionIntact2022_afterReviewed_mapping.csv')
m_pl = displ$new(degree_hippie_intact$degree)
est = estimate_xmin(m_pl)
m_pl$setXmin(est)
#plot
xy <- plot(m_pl)
l <- lines(m_pl, col = 'green')
scaleFUN <- function(x) signif(x,digits = 3)
ggplot(xy, aes(x = x, y = y)) + geom_point() + geom_line(data = l, color = "red") +
scale_x_continuous(trans='log2') + scale_y_continuous(trans='log2', labels = scaleFUN) + xlab('Degree') + ylab('Frequency') +
theme(axis.text = element_text(size = 12), axis.title = element_text(size = 12))
ggsave(paste0('plot_degree_hippieIntact2022_afterReviewed_mapping','.pdf'),height = 8, width = 8,units = 'cm')
setwd("~/marta/marta_WorkStation/bait_usage/HIPPIE_degree/HIPPIE_union_Intact2022/IDmapping_test")
table_ratio <- read.csv('table_ratio_HIPPIEunionIntact2022.csv')
table_ratio$num_inter <- as.numeric(gsub('>=','',table_ratio$num_inter))
table_ratio <- table_ratio[-c(3,4),]
ggplot(data=table_ratio, aes(x=num_inter, y=ratio)) +
geom_point() + xlab("Number of ppis") + ylab('non-power law/power-law') +
scale_x_continuous(labels = table_ratio$num_inter,breaks = table_ratio$num_inter) +
theme(axis.text = element_text(size = 10), axis.title = element_text(size = 10))
ggsave(paste0('plot_numInter_ratio_HIPPIEunionIntact2022_v2.pdf'),height = 8, width = 13,units = 'cm')
#--------------------------------------
# plot degree distribution with ggplot
#--------------------------------------
degree_hippie_intact <- read.csv('degree_HIPPIEunionIntact2022_afterReviewed_mapping.csv')
m_pl = displ$new(degree_hippie_intact$degree)
est = estimate_xmin(m_pl)
m_pl$setXmin(est)
#plot
xy <- plot(m_pl)
l <- lines(m_pl, col = 'green')
scaleFUN <- function(x) signif(x,digits = 3)
ggplot(xy, aes(x = x, y = y)) + geom_point() + geom_line(data = l, color = "red") +
scale_x_continuous(trans='log2') + scale_y_continuous(trans='log2', labels = scaleFUN) + xlab('Degree') + ylab('Frequency') +
theme(axis.text = element_text(size = 10), axis.title = element_text(size = 10))
ggsave(paste0('plot_degree_hippieIntact2022_afterReviewed_mapping','.pdf'),height = 8, width = 8,units = 'cm')
#plot
bait_usage <- read.csv('bait_usage_intact2022_afterReviewed_mapping.csv')
m_pl = displ$new(bait_usage$bait_usage)
est = estimate_xmin(m_pl)
m_pl$setXmin(est)
#plot
xy <- plot(m_pl)
xy$y <- signif(xy$y, digits = 3)
l <- lines(m_pl, col = 'green')
scaleFUN <- function(x) signif(x,digits = 3)
ggplot(xy, aes(x = x, y = y)) + geom_point() + geom_line(data = l, color = "red") +
scale_x_continuous(trans='log2') + scale_y_continuous(trans='log2', labels = scaleFUN) + xlab('Bait usage') + ylab('Frequency') +
theme(axis.text = element_text(size = 10), axis.title = element_text(size = 10))
ggsave(paste0('plot_fitted_bait_usage_Intact2022','.pdf'),height = 9, width = 9,units = 'cm')
dir_out <- 'NPL_sampling_results/'
table_100 <- read.csv(paste0(dir_out,'table_merge_100NPLstudies_n1000degree.csv'))
table_100$nstudy <- rep(100,nrow(table_100))
table_200 <- read.csv(paste0(dir_out,'table_merge_200NPLstudies_n1000degree.csv'))
table_200$nstudy <- rep(200,nrow(table_200))
table_300 <- read.csv(paste0(dir_out,'table_merge_300NPLstudies_n1000degree.csv'))
table_300$nstudy <- rep(300,nrow(table_300))
length(which(table_100$pvalue >= 0.1))
length(which(table_200$pvalue >= 0.1))
length(which(table_300$pvalue >= 0.1))
table <- as.data.frame(rbind(table_100,table_200,table_300))
table$nstudy <- as.factor(table$nstudy)
#plot
bait_usage <- read.csv('bait_usage_intact2022_afterReviewed_mapping.csv')
m_pl = displ$new(bait_usage$bait_usage)
est = estimate_xmin(m_pl)
m_pl$setXmin(est)
#plot
xy <- plot(m_pl)
xy$y <- signif(xy$y, digits = 3)
l <- lines(m_pl, col = 'green')
scaleFUN <- function(x) signif(x,digits = 3)
ggplot(xy, aes(x = x, y = y)) + geom_point() + geom_line(data = l, color = "red") +
scale_x_continuous(trans='log2') + scale_y_continuous(trans='log2', labels = scaleFUN) + xlab('Bait usage') + ylab('Frequency') +
theme(axis.text = element_text(size = 10), axis.title = element_text(size = 10))
ggsave(paste0('plot_fitted_bait_usage_Intact2022','.pdf'),height = 10, width = 10,units = 'cm')
table <- as.data.frame(rbind(table_100,table_200,table_300))
table$nstudy <- as.factor(table$nstudy)
ggplot(table, aes(x=nstudy, y= pvalue)) +
geom_boxplot() + xlab('number of random non-power law studies') + ylab('p-value') +
geom_hline(yintercept=0.1, linetype="dashed", color = "red") + theme(axis.text = element_text(size = 10), axis.title = element_text(size = 10)) +
annotate('text',
x = 1:length(table(table$nstudy)),
y = 1.2,
label = table(table$nstudy[which(table$pvalue >= 0.1)])/1000,
size = 10)
ggsave(paste0(dir_out,'boxplot_mergingNPL.pdf'),height = 10, width = 10,units = 'cm')
ggplot(table, aes(x=nstudy, y= pvalue)) +
geom_boxplot() + xlab('number of random non-power law studies') + ylab('p-value') +
geom_hline(yintercept=0.1, linetype="dashed", color = "red") + theme(axis.text = element_text(size = 10), axis.title = element_text(size = 10)) +
annotate('text',
x = 1:length(table(table$nstudy)),
y = 1.2,
label = table(table$nstudy[which(table$pvalue >= 0.1)])/1000,
size = 5)
ggsave(paste0(dir_out,'boxplot_mergingNPL.pdf'),height = 10, width = 10,units = 'cm')
50/14
ggplot(table, aes(x=nstudy, y= pvalue)) +
geom_boxplot() + xlab('number of random non-power law studies') + ylab('p-value') +
geom_hline(yintercept=0.1, linetype="dashed", color = "red") + theme(axis.text = element_text(size = 10), axis.title = element_text(size = 10)) +
annotate('text',
x = 1:length(table(table$nstudy)),
y = 1.2,
label = table(table$nstudy[which(table$pvalue >= 0.1)])/1000,
size = 3.6)
ggsave(paste0(dir_out,'boxplot_mergingNPL.pdf'),height = 10, width = 10,units = 'cm')
setwd("~/marta/marta_WorkStation/bait_usage/HIPPIE_degree/HIPPIE_union_Intact2022/IDmapping_test/")
source('../../../function.R')
library(parallel)
library(doParallel)
#calculate_new_degree_table(intact,table_power[seq(1,5),],ninter,10,1)
#--------------------------------------------------------
# wilcoxon test
#-------------------------------------------------------
setwd("~/marta/marta_WorkStation/bait_usage/HIPPIE_degree/HIPPIE_union_Intact2022/IDmapping_test/Intact/first_run_seed1/")
ninter <- 2
final_table_noNA <- read.csv(paste0('degree_bis_table_ninter',ninter,'_noNA_10.csv'))
ninter <- c(200,250,300,350,400,450,500)
for(i in ninter){
final_table_noNA <- final_table_noNA[which(final_table_noNA$n_inter >= i),]
wilcox_test_ratio(final_table_noNA,'boxplot_ratio_bait_prey_or_prey_bait_noNA_10',i)
}
# ### distribution of the ratios
ninter <- 2
final_table_noNA <- read.csv(paste0('degree_bis_table_ninter',ninter,'_noNA_10.csv'))
final_table_200 <- final_table_noNA[which(final_table_noNA$n_inter >= 200 ),]
ggplot(final_table_200, aes(ratio_bait_prey)) +
geom_bar() + scale_x_binned() + ylab('Number of studies') +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 14))
ggplot(final_table_200, aes(ratio_bait_prey)) +
geom_bar() + scale_x_binned() + ylab('Number of studies') + xlab('Size balance') +
theme(axis.text = element_text(size = 10), axis.title = element_text(size = 10))
ggsave('plot_distribution_ratio_PLstudies.pdf',height = 10, width = 10, units = 'cm')
source('../../../function.R')
source('../../../../function.R')
source('../../../../../function.R')
#calculate_new_degree_table(intact,table_power[seq(1,5),],ninter,10,1)
#--------------------------------------------------------
# wilcoxon test
#-------------------------------------------------------
setwd("~/marta/marta_WorkStation/bait_usage/HIPPIE_degree/HIPPIE_union_Intact2022/IDmapping_test/Intact/first_run_seed1/")
ninter <- 2
final_table_noNA <- read.csv(paste0('degree_bis_table_ninter',ninter,'_noNA_10.csv'))
ninter <- c(200,250,300,350,400,450,500)
for(i in ninter){
final_table_noNA <- final_table_noNA[which(final_table_noNA$n_inter >= i),]
wilcox_test_ratio(final_table_noNA,'boxplot_ratio_bait_prey_or_prey_bait_noNA_10',i)
}
ggplot(final_table_200, aes(ratio_bait_prey)) +
geom_bar() + scale_x_binned() + ylab('Number of studies') + xlab('Size balance') +
theme(axis.text = element_text(size = 10), axis.title = element_text(size = 10))
ggsave('plot_distribution_ratio_PLstudies.pdf',height = 11, width = 10, units = 'cm')
ggplot(final_table_200, aes(ratio_bait_prey)) +
geom_bar() + scale_x_binned() + ylab('Number of studies') + xlab('Size balance') +
theme(axis.text = element_text(size = 10), axis.title = element_text(size = 10))
ggsave('plot_distribution_ratio_PLstudies.pdf',height = 10, width = 10, units = 'cm')
# ### distribution of the ratios
ninter <- 2
final_table_noNA <- read.csv(paste0('degree_bis_table_ninter',ninter,'_noNA_10.csv'))
final_table_200 <- final_table_noNA[which(final_table_noNA$n_inter >= 200 ),]
ggplot(final_table_200, aes(ratio_bait_prey)) +
geom_bar() + scale_x_binned() + ylab('Number of studies') + xlab('Size balance') +
theme(axis.text = element_text(size = 10), axis.title = element_text(size = 10))
ggsave('plot_distribution_ratio_PLstudies.pdf',height = 10, width = 10, units = 'cm')
#calculate_new_degree_table(intact,table_power[seq(1,5),],ninter,10,1)
#--------------------------------------------------------
# wilcoxon test
#-------------------------------------------------------
setwd("~/marta/marta_WorkStation/bait_usage/HIPPIE_degree/HIPPIE_union_Intact2022/IDmapping_test/Intact/first_run_seed1/")
ninter <- 2
final_table_noNA <- read.csv(paste0('degree_bis_table_ninter',ninter,'_noNA_10.csv'))
ninter <- c(200,250,300,350,400,450,500)
for(i in ninter){
final_table_noNA <- final_table_noNA[which(final_table_noNA$n_inter >= i),]
wilcox_test_ratio(final_table_noNA,'boxplot_ratio_bait_prey_or_prey_bait_noNA_10',i)
}
ggplot(final_table_200, aes(ratio_bait_prey)) +
geom_bar() + scale_x_binned() + ylab('Number of studies') + xlab('Size balance') +
theme(axis.text = element_text(size = 10), axis.title = element_text(size = 10))
ggsave('plot_distribution_ratio_PLstudies.pdf',height = 10.5, width = 10, units = 'cm')
# ### distribution of the ratios
ninter <- 2
final_table_noNA <- read.csv(paste0('degree_bis_table_ninter',ninter,'_noNA_10.csv'))
final_table_200 <- final_table_noNA[which(final_table_noNA$n_inter >= 200 ),]
ggplot(final_table_200, aes(ratio_bait_prey)) +
geom_bar() + scale_x_binned() + ylab('Number of studies') + xlab('Size balance') +
theme(axis.text = element_text(size = 10), axis.title = element_text(size = 10))
ggsave('plot_distribution_ratio_PLstudies.pdf',height = 10.5, width = 10, units = 'cm')
ggplot(final_table_200, aes(ratio_bait_prey)) +
geom_bar() + scale_x_binned() + ylab('Number of studies') + xlab('Size balance') +
theme(axis.text = element_text(size = 10), axis.title = element_text(size = 10))
ggsave('plot_distribution_ratio_PLstudies.pdf',height = 10.3, width = 10, units = 'cm')
setwd("~/marta/marta_WorkStation/ppi-network-simulation")
reticulate::repl_python()
